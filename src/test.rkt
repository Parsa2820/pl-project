#lang racket

(require "parser.rkt")
(require "interpreter.rkt")

(define (test-interpreter)
  (run "a=[1,2,3,4]; for i in a: if i == 2: print(i); continue; else: print(23);; print(999); ; for i in a: print(i);;")
  (displayln "")                       
  (run "a=[4,3,True];print(a,4); for i in a: b = i; print(b); ; print(b); pass; a = True * False; print(a);")
  (displayln "")
  (run "l1=[1,2];l2=[3,4];l3=l1+l2;print(l3);")
  (displayln "")
  (run "n1=1;print(n1);n2=-n1;print(n2);n3=+n1;print(n3);n4=-n2;print(n4);")
  (displayln "")
  (run "a=1/2;print(a);")
  (displayln "")
  (run "print(1);pass;print(2);")
  (displayln "")
  (run "le1=0*2;print(le1);le2=False*True;print(le2);")
  (displayln "")
  (run "a=5;if a == 6 : print(1);else:print(2);;")
  (displayln "")
  (evaluate-file "../sample/list.rktpy")
  (displayln "")
  (evaluate-file "../sample/for.rktpy")
  (displayln "")
  (evaluate-file "../sample/function.rktpy")
  (displayln "")
  (evaluate-file "../sample/fib.rktpy")
  (displayln "")
  (evaluate-file "../sample/return.rktpy")
  (displayln "")
  (evaluate-file "../sample/global.rktpy")
  (displayln "")
  (evaluate-file "../sample/list-utils.rktpy")
  (displayln "")
  )

(define (test-lexer)
  (define my-lexer (lex-this python-lexer (open-input-string "f();")))
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  (my-lexer)
  )

(define (test-lazy)
  (evaluate-file "../sample/lazy-function.rktpy")
  (displayln "")
  )

;(test-interpreter)
;(test-lazy)

(run "a=None; print(a);")

;(evaluate-file "../sample/global.rktpy")
(displayln "")